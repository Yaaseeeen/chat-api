# This file is a template, and might need editing before it works on your project.
# This is the Gradle build system for JVM applications
# https://gradle.org/
# https://github.com/gradle/gradle
image: gradle:4.10-jdk8-alpine

# Disable the Gradle daemon for Continuous Integration servers as correctness
# is usually a priority over speed in CI environments. Using a fresh
# runtime for each build is more reliable since the runtime is completely
# isolated from any previous builds.
variables:
  DOCKER_DRIVER: overlay2
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  IMAGE_NAME: "$CI_REGISTRY/$CI_PROJECT_PATH"
  CI_SHORT_COMMIT_SHA: '$${CI_COMMIT_SHA:0:8}'
  CHAT_IMAGE_NAME_MASTER: $CI_REGISTRY/$CI_PROJECT_PATH/master/chat-api
  CHAT_IMAGE_NAME_DEV: $CI_REGISTRY/$CI_PROJECT_PATH/dev/chat-api

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle
  - export BUILD_DATE=`date +%Y%m%d-%H%M%S`
  - eval export CI_SHORT_COMMIT_SHA=${CI_SHORT_COMMIT_SHA}
  - eval export RELEASE_IMAGE_TAG=$BUILD_DATE.$CI_SHORT_COMMIT_SHA

stages:
  - build
  - release

build_app:
  stage: build
  script: gradle --build-cache assemble check
  artifacts:
    paths:
      - build/libs/
    expire_in: 1 week
  cache:
    key: "$CI_PROJECT_NAME"
    paths:
      - .gradle/wrapper
      - .gradle/caches

build_dev:
  image: docker:latest
  services:
    - docker:dind
  stage: release
  dependencies:
    - build_app
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build --pull -t $CHAT_IMAGE_NAME_DEV .
    - docker tag $CHAT_IMAGE_NAME_DEV $CHAT_IMAGE_NAME_DEV:$RELEASE_IMAGE_TAG
    - docker tag $CHAT_IMAGE_NAME_DEV $CHAT_IMAGE_NAME_DEV:latest
    - docker push $CHAT_IMAGE_NAME_DEV:$RELEASE_IMAGE_TAG
    - docker push $CHAT_IMAGE_NAME_DEV:latest
  only:
    - dev

build_branches:
  image: docker:latest
  services:
    - docker:dind
  stage: release
  dependencies:
    - build_app
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build --pull -t $IMAGE_NAME .
  only:
    - branches
  except:
    - master
    - dev

build_master:
  image: docker:latest
  services:
    - docker:dind
  stage: release
  dependencies:
    - build_app
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build --pull -t $CHAT_IMAGE_NAME_MASTER .
    - docker tag $CHAT_IMAGE_NAME_MASTER $CHAT_IMAGE_NAME_MASTER:$RELEASE_IMAGE_TAG
    - docker tag $CHAT_IMAGE_NAME_MASTER $CHAT_IMAGE_NAME_MASTER:latest
    - docker push $CHAT_IMAGE_NAME_MASTER:$RELEASE_IMAGE_TAG
    - docker push $CHAT_IMAGE_NAME_MASTER:latest
  only:
    - master
